MODULE main() 
VAR
  st : {s0,s1,s2};
  p1: model(s0);
  p2: model(s1);
  p3: model(s2);
  p4: model({s0,s1,s2});

ASSIGN   

----------------- ALL CTL formulae considered, evaluate to TRUE
  CTLSPEC ((p1.p) & (p1.q))             -----1.
  CTLSPEC !(p1.r)                       -----2.
  CTLSPEC (p1.tr)                       -----3.
  CTLSPEC (EX(p1.q & p1.r))             -----4.
  CTLSPEC !(AX ((p1.q) & (p1.r)))       -----5.
  CTLSPEC !( EF(((p1.p) & (p1.r))))     -----6.
  CTLSPEC EG (p3.r)                     -----7.
  CTLSPEC AG(p3.r)                      -----7.2.
  CTLSPEC AF (p1.r)                     -----8.
  CTLSPEC E[(p1.p & p1.q) U p1.r]       -----9.
  CTLSPEC A[p1.p U p1.r]                -----10.
  CTLSPEC AG ((p1.p|p1.q|p1.r)->EF EG p1.r)--11.




------------------ Creates model of figure 3.3;
MODULE model(s)
VAR

	st : {s0,s1,s2};
    
    p: boolean;
    q: boolean;
    r: boolean;
    tr: boolean;

ASSIGN

	init(st):= s;
  init(tr):=TRUE;
    init(p):= case
                st=s0 : TRUE;
                st=s1 : FALSE;
                st=s2 : FALSE;
              esac;
    init(q):= case
                st=s0 : TRUE;
                st=s1 : TRUE;
                st=s2 : FALSE;
              esac;
    init(r):= case
                st=s0 : FALSE;
                st=s1 : TRUE;
                st=s2 : TRUE;
              esac;
  next(tr):=TRUE;
	next(st):= case
                (st=s0) : {s1,s2};
                (st=s1) : {s2,s0};
                (st=s2) : s2;

				 esac;
    
    next(p):= case
                next(st)=s0 : TRUE;
                next(st)=s1 : FALSE;
                next(st)=s2 : FALSE;
              esac;
    next(q):= case
                next(st)=s0 : TRUE;
                next(st)=s1 : TRUE;
                next(st)=s2 : FALSE;
              esac;
    next(r):= case
                next(st)=s0 : FALSE;
                next(st)=s1 : TRUE;
                next(st)=s2 : TRUE;
              esac;
